GIT 

    -Remove directory from remote repository after adding them to .gitignore

        git rm --cached `git ls-files -i -c --exclude-from=.gitignore` 
        git commit -m 'Removed all files that are in the .gitignore' 
        git push origin main

-----------------------------------------------------------------------------------

PYTHON

    -Kill python process running python3

        top (find pid number)
        kill -9 ...

-----------------------------------------------------------------------------------

CONDA

    -Pckg dependencies
        https://stackoverflow.com/questions/26101972/how-to-identify-conda-package-dependents
        conda install -c conda-forge conda-tree

    -Export all avaiable envs to current path

        #COPYPASTA to terminal
        for env in $(conda env list | cut -d" " -f1); do 
            if [[ ${env:0:1} == "#" ]] ; then continue; fi;
            conda env export -n $env > ${env}.yml
        done

        conda env export -n zugpu > zugpu.yml

    -Version check

        conda list | grep -E 'cudnn|cudatoolkit|tensorflow'
        CUDA: nvcc --version  | cat /usr/local/cuda/version.txt
        (https://www.tensorflow.org/install/source)
    
    -Revert

    -Packages Install tf-gpu-zu (https://anaconda.org/)

        conda create -n tf-gpu-zu2 
        conda install tensorflow-gpu=2.2.0 keras neptune-client -c conda-forge #-> python 3.8.16
        conda install -c conda-forge opencv pysimplegui tqdm 
        conda install numpy=1.23.4
        conda install -c anaconda scikit-learn seaborn #pandas 
        conda install -c conda-forge neptune-client
        conda install -c conda-forge ffmpeg -> for convert mp4 to aac
        conda install -c conda-forge streamlit 
    

    -zugpu3
        conda create -n zugpu3 python=3.6.9
        conda activate zugpu3
        conda install tensorflow-gpu=2.2.0
        conda install -c conda-forge opencv tqdm moviepy matplotlib
        conda install -c anaconda scikit-learn seaborn 

-----------------------------------------------------------------------------------

OS 

    -Check if path is writable

        if [ -w "/path" ]; then echo "WRITABLE"; else echo "NOT WRITABLE"; fi


    -Aliases

        alias catghpw='cat /raid/DATASETS/.zuble/.g'
        alias cdvigia='cd /raid/DATASETS/.zuble/vigia'
        alias condazugpu='conda activate zugpu'
        alias condazhengpu='conda activate zhen_gpu'
        alias e='exit'
        alias c='clear'
        alias gitvigiaup='cdvigia && git add . && git commit -m '\''up'\'' && catghpw && git push'
        alias nvidia='watch -n 0.5 nvidia-smi'

    -Change owner of files recursivly

        sudo chown -R new_owner:new_group /path/to/directory
        
-----------------------------------------------------------------------------------

NEPTUNE 

    -Delete log data
        project = neptune.init_project(project="vigia/base", api_token=nept)
        del project["dataset"]

-----------------------------------------------------------------------------------

ESSENTIA https://essentia.upf.edu/installing.html

    -1
        -git clone --recursive https://github.com/MTG/essentia.git && cd essentia

        -dependencies:
            sudo apt-get install build-essential libeigen3-dev libyaml-dev libfftw3-dev libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libsamplerate0-dev libtag1-dev libchromaprint-dev
            sudo apt-get install python3-dev python3-numpy-dev python3-numpy python3-yaml python3-six
            run sh @ src/3rdparty/tensorflow/setup_from_libtensorflow.sh

        -compile:
            python3 waf configure --with-tensorflow --with-python --with-examples
            sudo python3 waf
            sudo python3 waf install

        -run tests:
            python3 waf run_python_tests
                if error "ImportError: libessentia.so: cannot open shared object file: No such file or directory":
                    sudo ldconfig
        
        -make usable in anaconda
            https://docs.conda.io/projects/conda-build/en/latest/resources/commands/conda-develop.html
            
            find essentia package with same python as conda env used to compile 
                ls /usr/local/lib/python3.8/site-packages/
                conda develop -n ENVNAME /usr/local/lib/python3.8/site-packages/

    #########
    -2
        git clone --recursive https://github.com/MTG/essentia.git && cd essentia

        -dependencies:
            sudo apt-get install build-essential libeigen3-dev libyaml-dev libfftw3-dev libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libsamplerate0-dev libtag1-dev libchromaprint-dev
            sudo apt-get install python3-dev python3-numpy-dev python3-numpy python3-yaml python3-six
            #which python3
            #python3 src/3rdparty/tensorflow/python setup_tensorflow.py

        python3 waf configure --with-tensorflow --with-python --with-examples --prefix=$CONDA_PREFIX

            It appears that there is a mismatch in the LTO (Link Time Optimization) 
            version between the system's g++ and the libpython3.6m.a file in your conda environment. 
            The error message indicates that the bytecode stream in 
            libpython3.6m.a was generated with LTO version 6.0, but the expected version is 6.2.

        conda update --all

        export CC=$CONDA_PREFIX/bin/gcc
        export CXX=$CONDA_PREFIX/bin/g++

        python3 waf configure --with-tensorflow --with-python --with-examples --prefix=$CONDA_PREFIX
        
        FAILL

    ############

    -3 
        sh src/3rdparty/tensorflow/setup_from_python.sh
            #!/bin/sh

            cd $(dirname $0)
            #PYTHON=python3
            PYTHON=/home/jtstudents/anaconda3/envs/zugpu3/bin/python3 #which python
            ## config
            MODE=python
            #CONTEXT=/usr/local/  # run as sudo if the context directory is not owned
            CONTEXT=/home/jtstudents/anaconda3/envs/zugpu3 #$CONDA_PREFIX
            ## setup
            $PYTHON setup_tensorflow.py -m $MODE -c $CONTEXT


                looking for the tensorflow python package...
                found tensorflow in "/home/jtstudents/anaconda3/envs/zugpu3/lib/python3.6/site-packages/tensorflow"
                tensorflow version: 2.2.0
                creating symbolic links...
                preparing pkg-config file...
                reconfiguring the linker...
                /sbin/ldconfig.real: Can't create temporary cache file /etc/ld.so.cache~: Permission denied
                done!
        
-----------------------------------------------------------------------------------

