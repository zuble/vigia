ALGOIGNORE = ['FFTAComplex', 'IFFTAComplex', 'IFFTKComplex', 'FFTKComplex', 'IFFTA', 'MusicExtractorSVM', 'FFTA', 'FFTK', 'GaiaTransform', 'IFFTK']
ALGOINCLUDE = []
AR = ['/usr/bin/ar']
ARFLAGS = ['rcs']
BINDIR = '/usr/local/bin'
BUILD_STATIC = False
CC = ['/usr/bin/gcc']
CCLNK_SRC_F = []
CCLNK_TGT_F = ['-o']
CC_NAME = 'gcc'
CC_SRC_F = []
CC_TGT_F = ['-c', '-o']
CC_VERSION = ('7', '5', '0')
CFLAGS_MACBUNDLE = ['-fPIC']
CFLAGS_PYEXT = ['-g', '-fdebug-prefix-map=/build/python3.6-PHwBoS/python3.6-3.6.9=.', '-fstack-protector', '-g', '-fwrapv', '-O3']
CFLAGS_cshlib = ['-fPIC']
CHECK_LIBS = ['libav', 'libsamplerate', 'taglib', 'yaml', 'fftw', 'libchromaprint', 'tensorflow']
COMPILER_CC = 'gcc'
COMPILER_CXX = 'g++'
CPPFLAGS = ['-fPIC']
CPPPATH_ST = '-I%s'
CROSS_COMPILE_MINGW32 = False
CXX = ['/usr/bin/g++']
CXXFLAGS = ['-std=c++11', '-pipe', '-Wall', '-msse', '-msse2', '-mfpmath=sse', '-O2', '-fPIC', '-pthread']
CXXFLAGS_MACBUNDLE = ['-fPIC']
CXXFLAGS_PYEXT = ['-g', '-fdebug-prefix-map=/build/python3.6-PHwBoS/python3.6-3.6.9=.', '-fstack-protector', '-g', '-fwrapv', '-O3']
CXXFLAGS_cxxshlib = ['-fPIC']
CXXLNK_SRC_F = []
CXXLNK_TGT_F = ['-o']
CXX_NAME = 'gcc'
CXX_SRC_F = []
CXX_TGT_F = ['-c', '-o']
DEFINES = ['HAVE_EIGEN3=1', 'EIGEN_PERMANENTLY_DISABLE_STUPID_WARNINGS', 'HAVE_AVCODEC=1', 'HAVE_AVFORMAT=1', 'HAVE_AVUTIL=1', 'HAVE_SWRESAMPLE=1', 'HAVE_SAMPLERATE=1', 'HAVE_TAGLIB=1', 'HAVE_YAML=1', 'HAVE_FFTW=1', 'HAVE_LIBCHROMAPRINT=1', 'HAVE_TENSORFLOW=1', '__STDC_CONSTANT_MACROS', 'PYTHONDIR="/usr/local/lib/python3.6/dist-packages"', 'PYTHONARCHDIR="/usr/local/lib/python3/dist-packages"', 'HAVE_PYEXT=1', 'HAVE_PYTHON_H=1', 'EIGEN_MPL2_ONLY']
DEFINES_PYEXT = ['NDEBUG']
DEFINES_ST = '-D%s'
DEFINE_COMMENTS = {'HAVE_EIGEN3': '', 'HAVE_AVCODEC': '', 'HAVE_AVFORMAT': '', 'HAVE_AVUTIL': '', 'HAVE_SWRESAMPLE': '', 'HAVE_SAMPLERATE': '', 'HAVE_TAGLIB': '', 'HAVE_YAML': '', 'HAVE_FFTW': '', 'HAVE_LIBCHROMAPRINT': '', 'HAVE_TENSORFLOW': '', 'PYTHONDIR': '', 'PYTHONARCHDIR': '', 'HAVE_PYEXT': '', 'HAVE_PYTHON_H': ''}
DEST_BINFMT = 'elf'
DEST_CPU = 'x86_64'
DEST_OS = 'linux'
EXAMPLES = False
EXAMPLE_LIST = ['standard_beatsmarker', 'standard_fadedetection', 'standard_mfcc', 'standard_onsetrate', 'standard_pitchdemo', 'standard_rhythmtransform', 'standard_spectralcontrast', 'standard_vibrato', 'standard_harmonicmodel', 'standard_hpsmodel', 'standard_hprmodel', 'standard_predominantmask', 'standard_sinemodel', 'standard_sinesubtraction', 'standard_sprmodel', 'standard_spsmodel', 'standard_stft', 'standard_stochasticmodel', 'standard_chromaprinter', 'standard_pca', 'standard_discontinuitydetector', 'standard_extractor_la-cupula', 'standard_gapsdetector', 'standard_humdetector', 'standard_loudnessebur128', 'standard_loudnessebur128_double_input', 'standard_saturationdetector', 'standard_snr', 'standard_welch', 'streaming_humdetector', 'standard_crosssimilaritymatrix', 'standard_chromacrosssimilarity', 'standard_coversongsimilarity', 'streaming_beatsmarker', 'streaming_beattracker_multifeature_mirex2013', 'streaming_key', 'streaming_gfcc', 'streaming_md5', 'streaming_mfcc', 'streaming_spectrogram', 'streaming_rhythmextractor_multifeature', 'streaming_onsetrate', 'streaming_panning', 'streaming_pitchyinfft', 'streaming_predominantpitchmelodia', 'streaming_chromacrosssimilarity', 'streaming_coversongsimilarity', 'streaming_stft', 'streaming_tuningfrequency', 'streaming_vibrato', 'streaming_yinprobabilistic', 'streaming_extractor_music', 'streaming_extractor_freesound', 'streaming_tensorflowpredict', 'streaming_musicnn_predict', 'streaming_vggish_predict']
FFT = 'FFTW'
GIT_SHA = 'v2.1_beta5-1032-g6fa440fd'
HAVE_AVCODEC = 1
HAVE_AVFORMAT = 1
HAVE_AVUTIL = 1
HAVE_EIGEN3 = 1
HAVE_FFTW = 1
HAVE_LIBCHROMAPRINT = 1
HAVE_PYEXT = 1
HAVE_PYTHON_H = 1
HAVE_SAMPLERATE = 1
HAVE_SWRESAMPLE = 1
HAVE_TAGLIB = 1
HAVE_TENSORFLOW = 1
HAVE_YAML = 1
IGNORE_ALGOS = False
INCLUDES_AVCODEC = ['/usr/include/x86_64-linux-gnu']
INCLUDES_AVFORMAT = ['/usr/include/x86_64-linux-gnu']
INCLUDES_AVUTIL = ['/usr/include/x86_64-linux-gnu']
INCLUDES_EIGEN3 = ['/usr/include/eigen3']
INCLUDES_PYEXT = ['/usr/include/python3.6m']
INCLUDES_SWRESAMPLE = ['/usr/include/x86_64-linux-gnu']
INCLUDES_TAGLIB = ['/usr/include/taglib']
INCLUDES_TENSORFLOW = ['/usr/local/include/tensorflow']
INCLUDE_ALGOS = False
LIBDIR = '/usr/local/lib'
LIBPATH_PYEXT = ['/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu', '/usr/lib']
LIBPATH_ST = '-L%s'
LIBPATH_TENSORFLOW = ['/usr/local/lib']
LIB_AVCODEC = ['avcodec']
LIB_AVFORMAT = ['avformat']
LIB_AVUTIL = ['avutil']
LIB_FFTW = ['fftw3f']
LIB_LIBCHROMAPRINT = ['chromaprint']
LIB_PYEMBED = []
LIB_PYEXT = []
LIB_SAMPLERATE = ['samplerate']
LIB_ST = '-l%s'
LIB_SWRESAMPLE = ['swresample']
LIB_TAGLIB = ['tag']
LIB_TENSORFLOW = ['pywrap_tensorflow_internal', 'tensorflow_framework']
LIB_YAML = ['yaml']
LIGHTWEIGHT = False
LINKFLAGS = ['-pthread']
LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']
LINKFLAGS_PYEXT = ['-Xlinker', '-export-dynamic', '-Wl,-O1', '-Wl,-Bsymbolic-functions']
LINKFLAGS_cshlib = ['-shared']
LINKFLAGS_cstlib = ['-Wl,-Bstatic']
LINKFLAGS_cxxshlib = ['-shared']
LINKFLAGS_cxxstlib = ['-Wl,-Bstatic']
LINK_CC = ['/usr/bin/gcc']
LINK_CXX = ['/usr/bin/g++']
NO_MSSE = False
ONLY_PYTHON = False
PKGCONFIG = ['/usr/bin/pkg-config']
PKG_CONFIG_PATH = False
PREFIX = '/usr/local'
PYC = 1
PYFLAGS = ''
PYFLAGS_OPT = '-O'
PYO = 1
PYTAG = 'cpython-36'
PYTHON = ['/usr/bin/python3']
PYTHONARCHDIR = '/usr/local/lib/python3/dist-packages'
PYTHONDIR = '/usr/local/lib/python3.6/dist-packages'
PYTHON_CONFIG = ['/usr/bin/python3-config']
PYTHON_VERSION = '3.6'
RPATH_ST = '-Wl,-rpath,%s'
SHLIB_MARKER = '-Wl,-Bdynamic'
SONAME_ST = '-Wl,-h,%s'
STATIC_DEPENDENCIES = False
STLIBPATH_ST = '-L%s'
STLIB_MARKER = '-Wl,-Bstatic'
STLIB_ST = '-l%s'
USE_LIBS = ' FFTW EIGEN3 AVFORMAT AVCODEC AVUTIL SWRESAMPLE SAMPLERATE TAGLIB YAML LIBCHROMAPRINT TENSORFLOW'
VERSION = '2.1-beta6-dev'
WITH_CPPTESTS = False
WITH_EXAMPLES = True
WITH_GAIA = False
WITH_PYTHON = True
WITH_STATIC_EXAMPLES = False
WITH_TENSORFLOW = True
WITH_VAMP = False
cprogram_PATTERN = '%s'
cshlib_PATTERN = 'lib%s.so'
cstlib_PATTERN = 'lib%s.a'
cxxprogram_PATTERN = '%s'
cxxshlib_PATTERN = 'lib%s.so'
cxxstlib_PATTERN = 'lib%s.a'
define_key = ['HAVE_EIGEN3', 'HAVE_AVCODEC', 'HAVE_AVFORMAT', 'HAVE_AVUTIL', 'HAVE_SWRESAMPLE', 'HAVE_SAMPLERATE', 'HAVE_TAGLIB', 'HAVE_YAML', 'HAVE_FFTW', 'HAVE_LIBCHROMAPRINT', 'HAVE_TENSORFLOW', 'PYTHONDIR', 'PYTHONARCHDIR', 'HAVE_PYEXT', 'HAVE_PYTHON_H']
env = {'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'LD_LIBRARY_PATH': '/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'LANG': 'C.UTF-8', 'HOSTNAME': '84c722d869b5', 'NVIDIA_VISIBLE_DEVICES': 'all', 'PWD': '/opt/essentia', 'HOME': '/root', 'DOCKER_RUN': '1', 'TERM': 'vt100', 'CUDA_PKG_VERSION': '10-1=10.1.243-1', 'CUDA_VERSION': '10.1.243', 'NVIDIA_DRIVER_CAPABILITIES': 'compute,utility', 'SHLVL': '1', 'NVIDIA_REQUIRE_CUDA': 'cuda>=10.1 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=396,driver<397 brand=tesla,driver>=410,driver<411', 'PATH': '/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'PS1': '\\[\\e]0;\\u@\\h: \\w\\a\\]${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ', '_': '/usr/bin/python3', 'OLDPWD': '/home/vigia'}
macbundle_PATTERN = '%s.bundle'
pcfile_opts = {'PREFIX': '/usr/local', 'VERSION': '2.1-beta6-dev', 'REQUIRESPRIVATE': 'fftw3f eigen3 libavformat libavcodec libavutil libswresample samplerate taglib yaml-0.1 libchromaprint tensorflow', 'LFLAGS': '', 'LPATHS': ''}
pyext_PATTERN = '%s.cpython-36m-x86_64-linux-gnu.so'
