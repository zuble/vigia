Setting top to                           : /opt/essentia 
Setting out to                           : /opt/essentia/build 
→ configuring the project in /opt/essentia
→ Building in release mode
Checking for 'g++' (C++ compiler)        : /usr/bin/g++ 
Checking for 'gcc' (C compiler)          : /usr/bin/gcc 
Checking for program 'pkg-config'        : /usr/bin/pkg-config 
Checking for 'eigen3'                    : yes 
Checking for 'libavcodec' >= 55.34.1     : yes 
Checking for 'libavformat'               : yes 
Checking for 'libavutil'                 : yes 
Checking for 'libswresample'             : yes 
Checking for 'samplerate'                : yes 
Checking for 'taglib' >= 1.9             : yes 
Checking for 'yaml-0.1'                  : yes 
Checking for 'fftw3f'                    : yes 
Checking for 'libchromaprint'            : yes 
Checking for 'tensorflow'                : yes 
Checking for 'gcc' (C compiler)          : /usr/bin/gcc 
Checking for program 'python'            : /usr/bin/python3 
Checking for python version >= 2.7.0     : 3.6.9 
→ Configuring for python3
python-config                            : /usr/bin/python3-config 
Asking python-config for pyext '--cflags --libs --ldflags' flags : yes 
Testing pyext configuration                                      : yes 
Checking for python module 'numpy'                               : 1.18.4 

================================ CONFIGURATION SUMMARY ================================
- using FFTW for FFT

- fftw detected!
- FFmpeg / libav detected!
- libsamplerate (SRC) detected!
  The following algorithms will be included: ['EqloudLoader', 'AudioWriter', 'AudioLoader', 'MonoLoader', 'MonoWriter', 'EasyLoader', 'Resample']

- TagLib detected!
  The following algorithms will be included: ['MetadataReader', 'MusicExtractor', 'FreesoundExtractor']

- libyaml detected!
  The following algorithms will be included: ['YamlInput', 'YamlOutput']

- Essentia is configured without Gaia2.
  The following algorithms will be ignored: ['GaiaTransform', 'MusicExtractorSVM']
  Examples requiring Gaia2 will be ignored

- Chromaprint detected!
  The following algorithms will be included: ['Chromaprinter']

- Tensorflow detected!
  The following algorithms will be included: ['TensorflowPredict', 'TensorflowPredictMusiCNN', 'TensorflowPredictVGGish', 'TensorflowPredictTempoCNN', 'TensorflowPredictCREPE', 'PitchCREPE', 'TempoCNN', 'TensorflowPredictEffnetDiscogs', 'TensorflowPredict2D', 'TensorflowPredictFSDSINet']

- Compiling 56 examples
  standard_beatsmarker, standard_fadedetection, standard_mfcc, standard_onsetrate, standard_pitchdemo, standard_rhythmtransform, standard_spectralcontrast, standard_vibrato, standard_harmonicmodel, standard_hpsmodel, standard_hprmodel, standard_predominantmask, standard_sinemodel, standard_sinesubtraction, standard_sprmodel, standard_spsmodel, standard_stft, standard_stochasticmodel, standard_chromaprinter, standard_pca, standard_discontinuitydetector, standard_extractor_la-cupula, standard_gapsdetector, standard_humdetector, standard_loudnessebur128, standard_loudnessebur128_double_input, standard_saturationdetector, standard_snr, standard_welch, streaming_humdetector, standard_crosssimilaritymatrix, standard_chromacrosssimilarity, standard_coversongsimilarity, streaming_beatsmarker, streaming_beattracker_multifeature_mirex2013, streaming_key, streaming_gfcc, streaming_md5, streaming_mfcc, streaming_spectrogram, streaming_rhythmextractor_multifeature, streaming_onsetrate, streaming_panning, streaming_pitchyinfft, streaming_predominantpitchmelodia, streaming_chromacrosssimilarity, streaming_coversongsimilarity, streaming_stft, streaming_tuningfrequency, streaming_vibrato, streaming_yinprobabilistic, streaming_extractor_music, streaming_extractor_freesound, streaming_tensorflowpredict, streaming_musicnn_predict, streaming_vggish_predict
Building all the algorithms
Ignoring the following algorithms: IFFTKComplex, IFFTAComplex, FFTA, IFFTA, FFTK, GaiaTransform, MusicExtractorSVM, FFTAComplex, IFFTK, FFTKComplex
Created algorithms registration file

---------------------------------------------------------------------------------------
- Building shared library
- Building Python extension
- Building examples
=======================================================================================
'configure' finished successfully (1.805s)
